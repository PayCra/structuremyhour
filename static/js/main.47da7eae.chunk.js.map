{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","myDate","Date","alarmTime1","alarmTime2","alarmTime3","alarmTime4","RedButtonState","StartButtonState","StartButtonDisabled","alarmPlayed1","alarmPlayed2","alarmPlayed3","alarmPlayed4","selectedSound","activity","image","alt","images","alts","playMySound","Audio","play","tick","setState","getHours","getMinutes","document","title","tillNextAlarm","handleStartingClick","minTillNextAlarm","secTillNextAlarm","getSeconds","onChange","e","target","value","this","intervalHandle","setInterval","clearInterval","className","onClick","disabled","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47da7eae.chunk.js","sourcesContent":["import './App.css';\r\nimport React from \"react\";\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        myDate: new Date(),\r\n        alarmTime1: 0,\r\n        alarmTime2: 25,\r\n        alarmTime3: 30,\r\n        alarmTime4: 55,\r\n        RedButtonState: \"RedButtonVisible\",\r\n        StartButtonState: \"StartButtonVisible\",\r\n        StartButtonDisabled: false,\r\n        alarmPlayed1: {},\r\n        alarmPlayed2: {},\r\n        alarmPlayed3: {},\r\n        alarmPlayed4: {},\r\n        selectedSound: \"quack\",\r\n        activity: \"\",\r\n        image: \"\",\r\n        alt: \"\"\r\n    }\r\n\r\n    images = [\"work.png\",\"play.png\"]\r\n    alts = [\"lwj looking at you reproachfully, \\\"wrk!\\\" floating next to his head\",\r\n        \"nhs laughing and tugging his hair, next to him the word \\\"play\\\" and a <3\"]\r\n\r\n    playMySound = () => {\r\n        let myAudio = new Audio(\"Sounds/\" + this.state.selectedSound + \".m4a\")\r\n        myAudio.play()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalHandle = setInterval(\r\n            () => this.tick(), 1000\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalHandle)\r\n    }\r\n\r\n    tick = () => {\r\n        this.setState({myDate: new Date()})\r\n\r\n        if (this.state.alarmPlayed1 !== this.state.myDate.getHours() &&\r\n            this.state.myDate.getMinutes() === this.state.alarmTime1\r\n        ) {\r\n            this.playMySound()\r\n            this.setState({alarmPlayed1: this.state.myDate.getHours()})\r\n        } else if (this.state.alarmPlayed2 !== this.state.myDate.getHours() &&\r\n            this.state.myDate.getMinutes() === this.state.alarmTime2\r\n        ) {\r\n            this.playMySound()\r\n            this.setState({alarmPlayed2: this.state.myDate.getHours()})\r\n        } else if (this.state.alarmPlayed3 !== this.state.myDate.getHours() &&\r\n            this.state.myDate.getMinutes() === this.state.alarmTime3\r\n        ) {\r\n            this.playMySound()\r\n            this.setState({alarmPlayed3: this.state.myDate.getHours()})\r\n        } else if (this.state.alarmPlayed4 !== this.state.myDate.getHours() &&\r\n            this.state.myDate.getMinutes() === this.state.alarmTime4\r\n        ) {\r\n            this.playMySound()\r\n            this.setState({alarmPlayed4: this.state.myDate.getHours()})\r\n        }\r\n\r\n        if ((this.state.activity !== \"work\") &&\r\n            ((this.state.myDate.getMinutes() >= 0 && this.state.myDate.getMinutes() < 25) ||\r\n                (this.state.myDate.getMinutes() >= 30 && this.state.myDate.getMinutes() < 55))) {\r\n            this.setState({image: this.images[0]})\r\n            this.setState({alt: this.alts[0]})\r\n            this.setState({activity: \"work\"})\r\n        } else if (((this.state.activity === \"work\") || (this.state.activity === \"\")) &&\r\n            ((this.state.myDate.getMinutes() >= 25 && this.state.myDate.getMinutes() < 30) ||\r\n                (this.state.myDate.getMinutes() >= 55))) {\r\n            this.setState({image: this.images[1]})\r\n            this.setState({alt: this.alts[1]})\r\n            this.setState({activity: \"play\"})\r\n        }\r\n\r\n        document.title = this.tillNextAlarm()\r\n    }\r\n\r\n    handleStartingClick = () => {\r\n        this.setState({StartButtonDisabled: {}})\r\n        this.setState({StartButtonState: \"StartButtonInvisible\"})\r\n    }\r\n\r\n    tillNextAlarm = () => {\r\n        let minTillNextAlarm\r\n        let secTillNextAlarm\r\n\r\n        if (this.state.activity===\"work\") {\r\n            if (this.state.myDate.getMinutes() < 25) {\r\n                minTillNextAlarm = 24 - this.state.myDate.getMinutes()\r\n                secTillNextAlarm = 60 - this.state.myDate.getSeconds()\r\n            } else if (this.state.myDate.getMinutes() < 55) {\r\n                minTillNextAlarm = 54 - this.state.myDate.getMinutes()\r\n                secTillNextAlarm = 60 - this.state.myDate.getSeconds()\r\n            }\r\n        } else {\r\n            if (this.state.myDate.getMinutes() < 30) {\r\n                minTillNextAlarm = 29 - this.state.myDate.getMinutes()\r\n                secTillNextAlarm = 60 - this.state.myDate.getSeconds()\r\n            } else if (this.state.myDate.getMinutes() < 60) {\r\n                minTillNextAlarm = 59 - this.state.myDate.getMinutes()\r\n                secTillNextAlarm = 60 - this.state.myDate.getSeconds()\r\n            }\r\n        }\r\n\r\n        if (secTillNextAlarm===60) {\r\n            minTillNextAlarm++\r\n            secTillNextAlarm=0\r\n        }\r\n\r\n        if (minTillNextAlarm < 10) {\r\n            minTillNextAlarm = \"0\" + minTillNextAlarm\r\n        }\r\n\r\n        if (secTillNextAlarm < 10) {\r\n            secTillNextAlarm = \"0\" + secTillNextAlarm\r\n        }\r\n\r\n        return (minTillNextAlarm + \":\" + secTillNextAlarm)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({selectedSound: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className={this.state.RedButtonState}\r\n                     onClick={() => this.setState({RedButtonState: \"RedButtonInvisible\"})}>\r\n                    <button className={this.state.StartButtonState} disabled={this.state.StartButtonDisabled}\r\n                            onClick={this.handleStartingClick}>click here to start the timer because Chrome hates sound\r\n                    </button>\r\n                </div>\r\n                <div className=\"AppProper\">\r\n                    <div className=\"Side\"/>\r\n                    <div className=\"Middle\">\r\n                    <div className=\"Text\">Alarm will sound at h:00, h:25, h:30 and h:55.</div>\r\n                    <div className=\"Text\">Time till next alarm: <span className=\"TillNext\">{this.tillNextAlarm()}</span></div>\r\n                    <img src={\"Pictures/\" + this.state.image}\r\n                         alt={this.state.alt}/>\r\n                    </div>\r\n                    <div className=\"Side\">\r\n                        <div>\r\n                        <div>Choose the alarm sound:</div>\r\n                            <select onChange={this.onChange}>\r\n                                <option value=\"quack\">quack</option>\r\n                                <option value=\"3 taps\">3 taps</option>\r\n                            </select>\r\n                        <button onClick={this.playMySound}>Play the sound</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}